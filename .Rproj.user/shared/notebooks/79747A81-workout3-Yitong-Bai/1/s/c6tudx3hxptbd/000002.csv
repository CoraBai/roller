"0","#check_times"
"0","#' @title check_times"
"0","#' @description check if time is positive integer larger or equal to 1"
"0","#' @param times input time"
"0","#' @return TRUE/FALSE of if time is qualified"
"0","check_times = function(times){"
"0","  if(times <1 | times%%1 != 0){"
"0","    stop(""'times' need to be a positive integer greater than or equal to 1"")"
"0","  }"
"0","  TRUE"
"0","}"
"0","#' @title rolls"
"0","#' @description print rollss information in an organized manner"
"0","#' @param list input roll list"
"0","#' @return print rolls info in an organized manner"
"0","print.rolls = function(list){"
"0","  cat('object ""rolls"" \n\n')"
"0","  print(list$rolls)"
"0","  invisible(list)"
"0","}"
"0","#' @title roll"
"0","#' @description return information of the roll"
"0","#' @param sides sides info of the object"
"0","#' @param prob prob info of the object"
"0","#' @return device information, including sides and probabilities"
"0","#' @export"
"0","roll = function(dev, times = 1){"
"0","  if(class(dev) != ""device""){"
"0","    stop(""The class is not 'device'"")"
"0","  }"
"0","  if (check_times(times)== TRUE) {"
"0","    rolls_sample = sample(dev$sides, size = times, replace = TRUE, prob = dev$prob)"
"0","    lst = list(rolls = rolls_sample, sides = dev$sides, prob = dev$prob, total = times)"
"0","    class(lst) = ""rolls"""
"0","  }"
"0","  return (lst)"
"0","}"
"0","fair_die = device(sides = 1:6, prob = rep(1/6, 6))"
"0","set.seed(123)"
"0","fair_50rolls = roll(fair_die, times = 50)"
"0","fair_50rolls"
"1","object ""rolls"" 

"
"1"," [1]"
"1"," 3"
"1"," 6"
"1"," 4"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 5"
"1"," 1"
"1"," 5"
"1"," 4"
"1"," 1"
"1"," 4"
"1"," 6"
"1"," 5"
"1"," 2"
"1"," 1"
"1"," 3"
"1"," 2"
"1"," 3"
"1"," 1"
"1"," 1"
"1"," 6"
"1"," 5"
"1"," 1"
"1"," 5"
"1"," 6"
"1"," 5"
"1"," 5"
"1"," 3"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 6"
"1"," 6"
"1"," 2"
"1"," 4"
"1"," 6"
"1"," 3"
"1"," 3"
"1"," 3"
"1","
"
"1","[41]"
"1"," 2"
"1"," 4"
"1"," 4"
"1"," 4"
"1"," 2"
"1"," 2"
"1"," 3"
"1"," 4"
"1"," 3"
"1"," 1"
"1","
"
"0","fair_die_two = device()"
"0","set.seed(123)"
"0","fair50 = roll(fair_die_two, times = 50)"
"0","names(fair50)"
"1","[1]"
"1"," ""rolls"""
"1"," ""sides"""
"1"," ""prob"" "
"1"," ""total"""
"1","
"
"0","fair50$rolls"
"1"," [1]"
"1"," 2"
"1"," 1"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 1"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 1"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 2"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 1"
"1"," 2"
"1"," 2"
"1"," 1"
"1"," 2"
"1"," 2"
"1"," 2"
"1","
"
"1","[41]"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 2"
"1"," 1"
"1","
"
"0","fair50$sides"
"1","[1]"
"1"," 1"
"1"," 2"
"1","
"
"0","fair50$prob"
"1","[1]"
"1"," 0.5"
"1"," 0.5"
"1","
"
"0","fair50$total"
"1","[1]"
"1"," 50"
"1","
"
"0","#string die"
"0","str_die = device(sides = c('a', 'b', 'c', 'd', 'e', 'f'), prob = c(0.075, 0.1, 0.125, 0.15, 0.20, 0.35))"
"0","set.seed(123)"
"0","str_rolls = roll(str_die, times = 20)"
"0","names(str_rolls)"
"1","[1]"
"1"," ""rolls"""
"1"," ""sides"""
"1"," ""prob"" "
"1"," ""total"""
"1","
"
"0","str_rolls"
"1","object ""rolls"" 

"
"1"," [1]"
"1"," ""f"""
"1"," ""c"""
"1"," ""e"""
"1"," ""b"""
"1"," ""a"""
"1"," ""f"""
"1"," ""e"""
"1"," ""b"""
"1"," ""d"""
"1"," ""e"""
"1"," ""a"""
"1"," ""e"""
"1"," ""d"""
"1"," ""d"""
"1"," ""f"""
"1"," ""b"""
"1"," ""f"""
"1"," ""f"""
"1"," ""f"""
"1"," ""a"""
"1","
"
