"0","#' @title check_sides"
"0","#' @description check if sides of the object are non-duplicated positive number"
"0","#' @param sides vector of object sides"
"0","#' @return TRUE/FALSE if the sides are legit or not"
"0","check_sides = function(sides){"
"0","  if(length(sides)<= 1){"
"0","     stop(""'sides' must be a vector of length greater than 1"")"
"0","  }"
"0","  if(any(duplicated(sides))== TRUE){"
"0","    stop(""'sides' cannot have duplicated elements"")"
"0","  }"
"0","  TRUE"
"0","}"
"0","#' @title check_prob"
"0","#' @description check if probability of the object is between 0 and 1, summed up to be 1"
"0","#' @param prob probability of sides"
"0","#' @return TRUE/FALSE if the probabilities are legit or not"
"0","check_prob = function(prob){"
"0","    if(!is.numeric(prob) | length(prob)<= 1){"
"0","      stop(""\n 'prob' must be a numeric vector of length 2"")"
"0","    } "
"0","    if(any(prob< 0) | any(prob> 1)){"
"0","      stop(""\n'prob' values must be between 0 and 1"")"
"0","    }"
"0","    if(sum(prob)!= 1){"
"0","      stop(""\n elements in 'prob' must add up to 1"")"
"0","    }"
"0","    TRUE"
"0","}"
"0","#' @title is.device"
"0","#' @description check if the class of input is device"
"0","#' @param x input object"
"0","#' @return TRUE/FALSE if the input are objects or not"
"0","is.device = function(x){"
"0","  if(class(x) == ""device""){"
"0","  return(TRUE)"
"0","  }"
"0","  else"
"0","    return(FALSE)"
"0","}"
"0","#' @title print.device"
"0","#' @description print device information in an organized manner"
"0","#' @param res input device"
"0","#' @return print sides and probability of device"
"0","print.device = function(res) {"
"0","  cd = data.frame(sides = res$sides, prob = res$prob)"
"0","  cat('object ""device"" \n\n')"
"0","  print(cd)"
"0","  invisible(res)"
"0","}"
"0","#constuctor function"
"0","#' @title device"
"0","#' @description return information of device"
"0","#' @param sides sides info of the object"
"0","#' @param prob prob info of the object"
"0","#' @return device information, including sides and probabilities"
"0","#' @export"
"0","device = function(sides = c(1,2), prob = c(0.5, 0.5)){"
"0","  if(length(sides) != length(prob)){"
"0","    stop(""'sides' and 'prob' have different lengths"")"
"0","  }"
"0","  if(check_prob(prob) == TRUE && check_sides(sides) == TRUE){"
"0","    res = list(sides = sides, prob = prob)"
"0","    class(res) = ""device"""
"0","    return(res)"
"0","    "
"0","  }"
"0","}"
"0","fair_coin = device()"
"0","fair_coin"
"1","object ""device"" 

"
